<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 22.6.2">

    <issue
        id="MissingRegistered"
        severity="Error"
        message="Class referenced in the layout file, io.dcloud.appstream.layout.streamapp_RelativeLayout, was not found in the project or the libraries"
        category="Correctness"
        priority="8"
        summary="Ensures that classes referenced in the manifest are present in the project or libraries"
        explanation="If a class is referenced in the manifest, it must also exist in the project (or in one of the libraries included by the project. This check helps uncover typos in registration names, or attempts to rename or move classes without updating the manifest file properly."
        url="http://developer.android.com/guide/topics/manifest/manifest-intro.html"
        urls="http://developer.android.com/guide/topics/manifest/manifest-intro.html"
        errorLine1="&lt;io.dcloud.appstream.layout.streamapp_RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\streamapp_list_item.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="MissingRegistered"
        severity="Error"
        message="Class referenced in the layout file, io.dcloud.appstream.layout.streamapp_RigthLelativelayout, was not found in the project or the libraries"
        category="Correctness"
        priority="8"
        summary="Ensures that classes referenced in the manifest are present in the project or libraries"
        explanation="If a class is referenced in the manifest, it must also exist in the project (or in one of the libraries included by the project. This check helps uncover typos in registration names, or attempts to rename or move classes without updating the manifest file properly."
        url="http://developer.android.com/guide/topics/manifest/manifest-intro.html"
        urls="http://developer.android.com/guide/topics/manifest/manifest-intro.html"
        errorLine1="        &lt;io.dcloud.appstream.layout.streamapp_RigthLelativelayout"
        errorLine2="        ^">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\streamapp_list_item.xml"
            line="62"
            column="9"/>
    </issue>

    <issue
        id="MockLocation"
        severity="Fatal"
        message="Mock locations should only be requested in a debug-specific manifest file (typically src/debug/AndroidManifest.xml)"
        category="Correctness"
        priority="8"
        summary="Checks that mock location providers are only used in debug builds"
        explanation="Using a mock location provider (by requiring the permission `android.permission.ACCESS_MOCK_LOCATION`) should *only* be done in debug builds. In Gradle projects, that means you should only request this permission in a debug source set specific manifest file.

To fix this, create a new manifest file in the debug folder and move the `&lt;uses-permission>` element there. A typical path to a debug manifest override file in a Gradle project is src/debug/AndroidManifest.xml."
        errorLine1="    &lt;uses-permission android:name=&quot;android.permission.ACCESS_MOCK_LOCATION&quot; />"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\AndroidManifest.xml"
            line="173"
            column="22"/>
    </issue>

    <issue
        id="DuplicateUsesFeature"
        severity="Warning"
        message="Duplicate declaration of uses-feature android.hardware.camera"
        category="Correctness"
        priority="5"
        summary="Ensures you declare each hardware or software feature only once in the manifest"
        explanation="A given feature should only be declared once in the manifest."
        errorLine1="    &lt;uses-feature android:name=&quot;android.hardware.camera&quot; />"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\AndroidManifest.xml"
            line="88"
            column="19"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="            android:textSize=&quot;22dp&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\activity_main_market.xml"
            line="53"
            column="13"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="            android:textSize=&quot;22dp&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\activity_main_market.xml"
            line="70"
            column="13"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="            android:textSize=&quot;22dp&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\activity_main_market.xml"
            line="87"
            column="13"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="            android:textSize=&quot;22dp&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\activity_main_market.xml"
            line="104"
            column="13"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="            android:textSize=&quot;16dip&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\app_download_notification.xml"
            line="32"
            column="13"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="            android:textSize=&quot;14dip&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\app_download_notification.xml"
            line="48"
            column="13"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                    android:textSize=&quot;17dp&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\dcloud_dialog.xml"
            line="49"
            column="21"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                    android:textSize=&quot;15dp&quot; />"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\dcloud_dialog.xml"
            line="62"
            column="21"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                android:textSize=&quot;14dp&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\dcloud_dialog.xml"
            line="91"
            column="17"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                android:textSize=&quot;14dp&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\dcloud_dialog.xml"
            line="103"
            column="17"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="        &lt;item name=&quot;android:textSize&quot;>13dp&lt;/item>"
        errorLine2="                                      ^">
        <location
            file="E:\testSpace\HBuilder-Hello\res\values\dcloud_styles.xml"
            line="66"
            column="39"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                android:textSize=&quot;20dip&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="34"
            column="17"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                        android:textSize=&quot;16dip&quot; />"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="97"
            column="25"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                        android:textSize=&quot;12dip&quot; />"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="105"
            column="25"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                        android:textSize=&quot;12dip&quot; />"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="118"
            column="25"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                        android:textSize=&quot;12dip&quot;"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="126"
            column="25"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="            android:textSize=&quot;16dip&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="308"
            column="13"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                    android:textSize=&quot;12dip&quot; />"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="379"
            column="21"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                    android:textSize=&quot;12dip&quot; />"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="442"
            column="21"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                    android:textSize=&quot;12dip&quot; />"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="505"
            column="21"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="                    android:textSize=&quot;12dip&quot; />"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="568"
            column="21"/>
    </issue>

    <issue
        id="ExportedContentProvider"
        severity="Warning"
        message="Exported content providers can provide access to potentially sensitive data"
        category="Security"
        priority="5"
        summary="Checks for exported content providers that do not require permissions"
        explanation="Content providers are exported by default and any application on the system can potentially use them to read and write data. If the content provider provides access to sensitive data, it should be protected by specifying `export=false` in the manifest or by protecting it with a permission that can be granted to other applications."
        errorLine1="        &lt;provider"
        errorLine2="        ^">
        <location
            file="E:\testSpace\HBuilder-Hello\AndroidManifest.xml"
            line="423"
            column="9"/>
    </issue>

    <issue
        id="ExportedReceiver"
        severity="Warning"
        message="Exported receiver does not require permission"
        category="Security"
        priority="5"
        summary="Checks for exported receivers that do not require permissions"
        explanation="Exported receivers (receivers which either set `exported=true` or contain an intent-filter and do not specify `exported=false`) should define a permission that an entity must have in order to launch the receiver or bind to it. Without this, any application can use this receiver."
        errorLine1="        &lt;receiver android:name=&quot;io.dcloud.feature.apsGt.PushMessageReceiver&quot; >"
        errorLine2="        ^">
        <location
            file="E:\testSpace\HBuilder-Hello\AndroidManifest.xml"
            line="348"
            column="9"/>
    </issue>

    <issue
        id="ExportedService"
        severity="Warning"
        message="Exported service does not require permission"
        category="Security"
        priority="5"
        summary="Checks for exported services that do not require permissions"
        explanation="Exported services (services which either set `exported=true` or contain an intent-filter and do not specify `exported=false`) should define a permission that an entity must have in order to launch the service or bind to it. Without this, any application can use this service."
        errorLine1="        &lt;service"
        errorLine2="        ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\AndroidManifest.xml"
            line="235"
            column="9"/>
    </issue>

    <issue
        id="ExportedService"
        severity="Warning"
        message="Exported service does not require permission"
        category="Security"
        priority="5"
        summary="Checks for exported services that do not require permissions"
        explanation="Exported services (services which either set `exported=true` or contain an intent-filter and do not specify `exported=false`) should define a permission that an entity must have in order to launch the service or bind to it. Without this, any application can use this service."
        errorLine1="        &lt;service"
        errorLine2="        ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\AndroidManifest.xml"
            line="373"
            column="9"/>
    </issue>

    <issue
        id="ExportedService"
        severity="Warning"
        message="Exported service does not require permission"
        category="Security"
        priority="5"
        summary="Checks for exported services that do not require permissions"
        explanation="Exported services (services which either set `exported=true` or contain an intent-filter and do not specify `exported=false`) should define a permission that an entity must have in order to launch the service or bind to it. Without this, any application can use this service."
        errorLine1="        &lt;service"
        errorLine2="        ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\AndroidManifest.xml"
            line="379"
            column="9"/>
    </issue>

    <issue
        id="AllowBackup"
        severity="Warning"
        message="Should explicitly set android:allowBackup to true or false (it&apos;s true by default, and that can have some security implications for the application&apos;s data)"
        category="Security"
        priority="3"
        summary="Ensure that allowBackup is explicitly set in the application&apos;s manifest"
        explanation="The allowBackup attribute determines if an application&apos;s data can be backed up and restored. It is documented at http://developer.android.com/reference/android/R.attr.html#allowBackup

By default, this flag is set to `true`. When this flag is set to `true`, application data can be backed up and restored by the user using `adb backup` and `adb restore`.

This may have security consequences for an application. `adb backup` allows users who have enabled USB debugging to copy application data off of the device. Once backed up, all application data can be read by the user. `adb restore` allows creation of application data from a source specified by the user. Following a restore, applications should not assume that the data, file permissions, and directory permissions were created by the application itself.

Setting `allowBackup=&quot;false&quot;` opts an application out of both backup and restore.

To fix this warning, decide whether your application should support backup, and explicitly set `android:allowBackup=(true|false)&quot;`"
        url="http://developer.android.com/reference/android/R.attr.html#allowBackup"
        urls="http://developer.android.com/reference/android/R.attr.html#allowBackup"
        errorLine1="    &lt;application"
        errorLine2="    ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\AndroidManifest.xml"
            line="203"
            column="5"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a LinearLayout: layout_toRightOf"
        category="Performance"
        priority="6"
        summary="Looks for layout params that are not valid for the given parent layout"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                android:layout_toRightOf=&quot;@id/progressBar&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\dcloud_view_splash.xml"
            line="61"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a RelativeLayout: layout_weight"
        category="Performance"
        priority="6"
        summary="Looks for layout params that are not valid for the given parent layout"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="     android:layout_weight=&quot;2&quot;"
        errorLine2="     ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification.xml"
            line="16"
            column="6"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a LinearLayout: layout_toRightOf"
        category="Performance"
        priority="6"
        summary="Looks for layout params that are not valid for the given parent layout"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="             android:layout_toRightOf=&quot;@id/notification_icon&quot;"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification.xml"
            line="34"
            column="14"/>
    </issue>

    <issue
        id="UseCompoundDrawables"
        severity="Warning"
        message="This tag and its children can be replaced by one &lt;TextView/> and a compound drawable"
        category="Performance"
        priority="6"
        summary="Checks whether the current node can be replaced by a `TextView` using compound drawables."
        explanation="A `LinearLayout` which contains an `ImageView` and a `TextView` can be more efficiently handled as a compound drawable (a single TextView, using the `drawableTop`, `drawableLeft`, `drawableRight` and/or `drawableBottom` attributes to draw one or more images adjacent to the text).

If the two widgets are offset from each other with margins, this can be replaced with a `drawablePadding` attribute.

There&apos;s a lint quickfix to perform this conversion in the Eclipse plugin."
        errorLine1="            &lt;LinearLayout"
        errorLine2="            ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="150"
            column="13"/>
    </issue>

    <issue
        id="UseCompoundDrawables"
        severity="Warning"
        message="This tag and its children can be replaced by one &lt;TextView/> and a compound drawable"
        category="Performance"
        priority="6"
        summary="Checks whether the current node can be replaced by a `TextView` using compound drawables."
        explanation="A `LinearLayout` which contains an `ImageView` and a `TextView` can be more efficiently handled as a compound drawable (a single TextView, using the `drawableTop`, `drawableLeft`, `drawableRight` and/or `drawableBottom` attributes to draw one or more images adjacent to the text).

If the two widgets are offset from each other with margins, this can be replaced with a `drawablePadding` attribute.

There&apos;s a lint quickfix to perform this conversion in the Eclipse plugin."
        errorLine1="                &lt;LinearLayout"
        errorLine2="                ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"
            line="102"
            column="17"/>
    </issue>

    <issue
        id="UseCompoundDrawables"
        severity="Warning"
        message="This tag and its children can be replaced by one &lt;TextView/> and a compound drawable"
        category="Performance"
        priority="6"
        summary="Checks whether the current node can be replaced by a `TextView` using compound drawables."
        explanation="A `LinearLayout` which contains an `ImageView` and a `TextView` can be more efficiently handled as a compound drawable (a single TextView, using the `drawableTop`, `drawableLeft`, `drawableRight` and/or `drawableBottom` attributes to draw one or more images adjacent to the text).

If the two widgets are offset from each other with margins, this can be replaced with a `drawablePadding` attribute.

There&apos;s a lint quickfix to perform this conversion in the Eclipse plugin."
        errorLine1="                &lt;LinearLayout android:id=&quot;@+id/status&quot; "
        errorLine2="                ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"
            line="133"
            column="17"/>
    </issue>

    <issue
        id="UseCompoundDrawables"
        severity="Warning"
        message="This tag and its children can be replaced by one &lt;TextView/> and a compound drawable"
        category="Performance"
        priority="6"
        summary="Checks whether the current node can be replaced by a `TextView` using compound drawables."
        explanation="A `LinearLayout` which contains an `ImageView` and a `TextView` can be more efficiently handled as a compound drawable (a single TextView, using the `drawableTop`, `drawableLeft`, `drawableRight` and/or `drawableBottom` attributes to draw one or more images adjacent to the text).

If the two widgets are offset from each other with margins, this can be replaced with a `drawablePadding` attribute.

There&apos;s a lint quickfix to perform this conversion in the Eclipse plugin."
        errorLine1="                &lt;LinearLayout"
        errorLine2="                ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"
            line="284"
            column="17"/>
    </issue>

    <issue
        id="DisableBaselineAlignment"
        severity="Warning"
        message="Set android:baselineAligned=&quot;false&quot; on this element for better performance"
        category="Performance"
        priority="3"
        summary="Looks for LinearLayouts which should set android:baselineAligned=false"
        explanation="When a LinearLayout is used to distribute the space proportionally between nested layouts, the baseline alignment property should be turned off to make the layout computation faster."
        errorLine1="        &lt;LinearLayout"
        errorLine2="        ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="53"
            column="9"/>
    </issue>

    <issue
        id="DisableBaselineAlignment"
        severity="Warning"
        message="Set android:baselineAligned=&quot;false&quot; on this element for better performance"
        category="Performance"
        priority="3"
        summary="Looks for LinearLayouts which should set android:baselineAligned=false"
        explanation="When a LinearLayout is used to distribute the space proportionally between nested layouts, the baseline alignment property should be turned off to make the layout computation faster."
        errorLine1="        &lt;LinearLayout"
        errorLine2="        ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="310"
            column="9"/>
    </issue>

    <issue
        id="DisableBaselineAlignment"
        severity="Warning"
        message="Set android:baselineAligned=&quot;false&quot; on this element for better performance"
        category="Performance"
        priority="3"
        summary="Looks for LinearLayouts which should set android:baselineAligned=false"
        explanation="When a LinearLayout is used to distribute the space proportionally between nested layouts, the baseline alignment property should be turned off to make the layout computation faster."
        errorLine1="            &lt;LinearLayout"
        errorLine2="            ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"
            line="34"
            column="13"/>
    </issue>

    <issue
        id="DisableBaselineAlignment"
        severity="Warning"
        message="Set android:baselineAligned=&quot;false&quot; on this element for better performance"
        category="Performance"
        priority="3"
        summary="Looks for LinearLayouts which should set android:baselineAligned=false"
        explanation="When a LinearLayout is used to distribute the space proportionally between nested layouts, the baseline alignment property should be turned off to make the layout computation faster."
        errorLine1="                 &lt;LinearLayout"
        errorLine2="                 ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"
            line="157"
            column="18"/>
    </issue>

    <issue
        id="DisableBaselineAlignment"
        severity="Warning"
        message="Set android:baselineAligned=&quot;false&quot; on this element for better performance"
        category="Performance"
        priority="3"
        summary="Looks for LinearLayouts which should set android:baselineAligned=false"
        explanation="When a LinearLayout is used to distribute the space proportionally between nested layouts, the baseline alignment property should be turned off to make the layout computation faster."
        errorLine1="            &lt;LinearLayout"
        errorLine2="            ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"
            line="229"
            column="13"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a layout_width of 0dip instead of wrap_content for better performance"
        category="Performance"
        priority="3"
        summary="Looks for inefficient weight declarations in LinearLayouts"
        explanation="When only a single widget in a LinearLayout defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="                android:layout_width=&quot;wrap_content&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="28"
            column="17"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a layout_width of 0dip instead of wrap_content for better performance"
        category="Performance"
        priority="3"
        summary="Looks for inefficient weight declarations in LinearLayouts"
        explanation="When only a single widget in a LinearLayout defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="                android:layout_width=&quot;wrap_content&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="79"
            column="17"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a layout_width of 0dip instead of fill_parent for better performance"
        category="Performance"
        priority="3"
        summary="Looks for inefficient weight declarations in LinearLayouts"
        explanation="When only a single widget in a LinearLayout defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="                    android:layout_width=&quot;fill_parent&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"
            line="43"
            column="21"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a layout_width of 0dip instead of wrap_content for better performance"
        category="Performance"
        priority="3"
        summary="Looks for inefficient weight declarations in LinearLayouts"
        explanation="When only a single widget in a LinearLayout defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="                         android:layout_width=&quot;wrap_content&quot;"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"
            line="163"
            column="26"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a layout_width of 0dip instead of fill_parent for better performance"
        category="Performance"
        priority="3"
        summary="Looks for inefficient weight declarations in LinearLayouts"
        explanation="When only a single widget in a LinearLayout defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="                    android:layout_width=&quot;fill_parent&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"
            line="237"
            column="21"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background #EAEAEA with a theme that also paints a background (inferred theme is @android:style/Theme.Holo)"
        category="Performance"
        priority="3"
        summary="Looks for overdraw issues (where a view is painted only to be fully painted over)"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1="    android:background=&quot;#EAEAEA&quot; >"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\dcloud_view_splash.xml"
            line="5"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background #00000000 with a theme that also paints a background (inferred theme is @android:style/Theme.Holo)"
        category="Performance"
        priority="3"
        summary="Looks for overdraw issues (where a view is painted only to be fully painted over)"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1="    android:background=&quot;#00000000&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="5"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background #FFFFFF with a theme that also paints a background (inferred theme is @android:style/Theme.Holo)"
        category="Performance"
        priority="3"
        summary="Looks for overdraw issues (where a view is painted only to be fully painted over)"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1="    android:background=&quot;#FFFFFF&quot; > "
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification.xml"
            line="6"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background #FFFFFF with a theme that also paints a background (inferred theme is @android:style/Theme.Holo)"
        category="Performance"
        priority="3"
        summary="Looks for overdraw issues (where a view is painted only to be fully painted over)"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1="    android:background=&quot;#FFFFFF&quot; >"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"
            line="5"
            column="5"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.activity_main_market appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\activity_main_market.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.app_download_notification appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\app_download_notification.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.color.dadada appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;color name=&quot;dadada&quot;>#DADADA&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\values\dcloud_colors.xml"
            line="3"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.color.ffffff appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;color name=&quot;ffffff&quot;>#FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\values\dcloud_colors.xml"
            line="4"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.color.e4e4e4 appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;color name=&quot;e4e4e4&quot;>#E4E4E4&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\values\dcloud_colors.xml"
            line="5"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.dcloud_dialog appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\dcloud_dialog.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.dcloud_loadingview appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\dcloud_loadingview.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.dcloud_view_splash appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\dcloud_view_splash.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.image_pick_gallery appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\image_pick_gallery.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.image_pick_gallery_item appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\image_pick_gallery_item.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.increment_popup_dialog appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.loadingview appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\loadingview.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.main_test_activity appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\main_test_activity.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.market_fragment_base appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\market_fragment_base.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.notification appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.notification_inc appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.drawable.snow_black_progress appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-hdpi\snow_black_progress.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.snow_black_progress appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\snow_black_progress.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.drawable.snow_white_progress appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-hdpi\snow_white_progress.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.snow_white_progress appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\snow_white_progress.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.stream_running_progress appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\stream_running_progress.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.streamapp_list appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\streamapp_list.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.streamapp_list_item appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\streamapp_list_item.xml"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This LinearLayout layout or its LinearLayout parent is possibly useless; transfer the background attribute to the other view"
        category="Performance"
        priority="2"
        summary="Checks whether a parent layout can be removed."
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="    &lt;LinearLayout"
        errorLine2="    ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\dcloud_loadingview.xml"
            line="7"
            column="5"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This LinearLayout layout or its LinearLayout parent is useless"
        category="Performance"
        priority="2"
        summary="Checks whether a parent layout can be removed."
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="        &lt;LinearLayout"
        errorLine2="        ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"
            line="21"
            column="9"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This LinearLayout layout or its LinearLayout parent is useless"
        category="Performance"
        priority="2"
        summary="Checks whether a parent layout can be removed."
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="                     &lt;LinearLayout"
        errorLine2="                     ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"
            line="162"
            column="22"/>
    </issue>

    <issue
        id="IconLauncherShape"
        severity="Warning"
        message="Launcher icons should not fill every pixel of their square region; see the design guide for details"
        category="Usability:Icons"
        priority="6"
        summary="Checks that launcher icons follow the recommended visual style"
        explanation="According to the Android Design Guide (http://developer.android.com/design/style/iconography.html) your launcher icons should &quot;use a distinct silhouette&quot;, a &quot;three-dimensional, front view, with a slight perspective as if viewed from above, so that users perceive some depth.&quot;

The unique silhouette implies that your launcher icon should not be a filled square."
        url="http://developer.android.com/design/style/iconography.html"
        urls="http://developer.android.com/design/style/iconography.html">
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-hdpi\icon.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image icon.png varies significantly in its density-independent (dip) size across the various density versions: drawable-ldpi\icon.png: 96x96 dp (72x72 px), drawable-mdpi\icon.png: 72x72 dp (72x72 px), drawable-hdpi\icon.png: 48x48 dp (72x72 px), drawable-xhdpi\icon.png: 36x36 dp (72x72 px)"
        category="Usability:Icons"
        priority="5"
        summary="Ensures that icons across densities provide roughly the same density-independent size"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-xhdpi\icon.png"/>
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-hdpi\icon.png"/>
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-mdpi\icon.png"/>
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-ldpi\icon.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image push.png varies significantly in its density-independent (dip) size across the various density versions: drawable-ldpi\push.png: 64x64 dp (48x48 px), drawable-hdpi\push.png: 48x48 dp (72x72 px), drawable-mdpi\push.png: 48x48 dp (48x48 px), drawable-xhdpi\push.png: 48x48 dp (96x96 px)"
        category="Usability:Icons"
        priority="5"
        summary="Ensures that icons across densities provide roughly the same density-independent size"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-xhdpi\push.png"/>
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-mdpi\push.png"/>
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-hdpi\push.png"/>
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-ldpi\push.png"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image splash.png varies significantly in its density-independent (dip) size across the various density versions: drawable-ldpi\splash.png: 1000x1779 dp (750x1334 px), drawable-mdpi\splash.png: 750x1334 dp (750x1334 px), drawable-hdpi\splash.png: 500x889 dp (750x1334 px), drawable-xhdpi\splash.png: 375x667 dp (750x1334 px)"
        category="Usability:Icons"
        priority="5"
        summary="Ensures that icons across densities provide roughly the same density-independent size"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-xhdpi\splash.png"/>
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-hdpi\splash.png"/>
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-mdpi\splash.png"/>
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-ldpi\splash.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The icon.png icon has identical contents in the following configuration folders: drawable-hdpi, drawable-ldpi, drawable-mdpi, drawable-xhdpi, drawable-xxhdpi, drawable"
        category="Usability:Icons"
        priority="5"
        summary="Finds icons that have identical bitmaps across various configuration parameters"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable\icon.png"/>
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-xxhdpi\icon.png"/>
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-xhdpi\icon.png"/>
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-mdpi\icon.png"/>
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-ldpi\icon.png"/>
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-hdpi\icon.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The push.png icon has identical contents in the following configuration folders: drawable-ldpi, drawable-mdpi"
        category="Usability:Icons"
        priority="5"
        summary="Finds icons that have identical bitmaps across various configuration parameters"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-mdpi\push.png"/>
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-ldpi\push.png"/>
    </issue>

    <issue
        id="IconDuplicatesConfig"
        severity="Warning"
        message="The splash.png icon has identical contents in the following configuration folders: drawable-hdpi, drawable-ldpi, drawable-mdpi, drawable-xhdpi, drawable-xxhdpi"
        category="Usability:Icons"
        priority="5"
        summary="Finds icons that have identical bitmaps across various configuration parameters"
        explanation="If an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.">
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-xxhdpi\splash.png"/>
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-xhdpi\splash.png"/>
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-mdpi\splash.png"/>
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-ldpi\splash.png"/>
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-hdpi\splash.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable res/drawable/icon.png in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Ensures that images are not defined in the density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon *really* is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable\icon.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable res/drawable/image_pick_mask.9.png in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Ensures that images are not defined in the density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon *really* is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable\image_pick_mask.9.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable res/drawable/image_pick_no_media.png in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Ensures that images are not defined in the density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon *really* is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable\image_pick_no_media.png"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in drawable-hdpi: actionsheet_bottom_normal.9.png, actionsheet_bottom_pressed.9.png, actionsheet_middle_normal.9.png, actionsheet_middle_pressed.9.png, actionsheet_single_normal.9.png... (9 more)"
        category="Usability:Icons"
        priority="4"
        summary="Ensures that icons provide custom versions for all supported densities"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-hdpi"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in drawable-mdpi: actionsheet_bottom_normal.9.png, actionsheet_bottom_pressed.9.png, actionsheet_middle_normal.9.png, actionsheet_middle_pressed.9.png, actionsheet_single_normal.9.png... (18 more)"
        category="Usability:Icons"
        priority="4"
        summary="Ensures that icons provide custom versions for all supported densities"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-mdpi"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in drawable-xhdpi: dcloud_snow_black_progress.xml, dcloud_snow_white_progress.xml, snow_black.png, snow_black_progress.xml, snow_white.png... (4 more)"
        category="Usability:Icons"
        priority="4"
        summary="Ensures that icons provide custom versions for all supported densities"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="E:\testSpace\HBuilder-Hello\res\drawable-xhdpi"/>
    </issue>

    <issue
        id="SmallSp"
        severity="Warning"
        message="Avoid using sizes smaller than 12sp: 8sp"
        category="Usability"
        priority="4"
        summary="Looks for text sizes that are too small"
        explanation="Avoid using sizes smaller than 12sp."
        errorLine1="                        android:textSize=&quot;8sp&quot; />"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="346"
            column="25"/>
    </issue>

    <issue
        id="SmallSp"
        severity="Warning"
        message="Avoid using sizes smaller than 12sp: 8sp"
        category="Usability"
        priority="4"
        summary="Looks for text sizes that are too small"
        explanation="Avoid using sizes smaller than 12sp."
        errorLine1="                        android:textSize=&quot;8sp&quot;"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="367"
            column="25"/>
    </issue>

    <issue
        id="SmallSp"
        severity="Warning"
        message="Avoid using sizes smaller than 12sp: 8sp"
        category="Usability"
        priority="4"
        summary="Looks for text sizes that are too small"
        explanation="Avoid using sizes smaller than 12sp."
        errorLine1="                        android:textSize=&quot;8sp&quot; />"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="409"
            column="25"/>
    </issue>

    <issue
        id="SmallSp"
        severity="Warning"
        message="Avoid using sizes smaller than 12sp: 8sp"
        category="Usability"
        priority="4"
        summary="Looks for text sizes that are too small"
        explanation="Avoid using sizes smaller than 12sp."
        errorLine1="                        android:textSize=&quot;8sp&quot;"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="430"
            column="25"/>
    </issue>

    <issue
        id="SmallSp"
        severity="Warning"
        message="Avoid using sizes smaller than 12sp: 8sp"
        category="Usability"
        priority="4"
        summary="Looks for text sizes that are too small"
        explanation="Avoid using sizes smaller than 12sp."
        errorLine1="                        android:textSize=&quot;8sp&quot; />"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="472"
            column="25"/>
    </issue>

    <issue
        id="SmallSp"
        severity="Warning"
        message="Avoid using sizes smaller than 12sp: 8sp"
        category="Usability"
        priority="4"
        summary="Looks for text sizes that are too small"
        explanation="Avoid using sizes smaller than 12sp."
        errorLine1="                        android:textSize=&quot;8sp&quot;"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="493"
            column="25"/>
    </issue>

    <issue
        id="SmallSp"
        severity="Warning"
        message="Avoid using sizes smaller than 12sp: 8sp"
        category="Usability"
        priority="4"
        summary="Looks for text sizes that are too small"
        explanation="Avoid using sizes smaller than 12sp."
        errorLine1="                        android:textSize=&quot;8sp&quot; />"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="535"
            column="25"/>
    </issue>

    <issue
        id="SmallSp"
        severity="Warning"
        message="Avoid using sizes smaller than 12sp: 8sp"
        category="Usability"
        priority="4"
        summary="Looks for text sizes that are too small"
        explanation="Avoid using sizes smaller than 12sp."
        errorLine1="                        android:textSize=&quot;8sp&quot;"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="556"
            column="25"/>
    </issue>

    <issue
        id="SmallSp"
        severity="Warning"
        message="Avoid using sizes smaller than 12sp: 11sp"
        category="Usability"
        priority="4"
        summary="Looks for text sizes that are too small"
        explanation="Avoid using sizes smaller than 12sp."
        errorLine1="                        android:textSize=&quot;11sp&quot; />"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"
            line="122"
            column="25"/>
    </issue>

    <issue
        id="SmallSp"
        severity="Warning"
        message="Avoid using sizes smaller than 12sp: 11sp"
        category="Usability"
        priority="4"
        summary="Looks for text sizes that are too small"
        explanation="Avoid using sizes smaller than 12sp."
        errorLine1="                     android:textSize=&quot;11sp&quot;"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"
            line="147"
            column="22"/>
    </issue>

    <issue
        id="SmallSp"
        severity="Warning"
        message="Avoid using sizes smaller than 12sp: 11sp"
        category="Usability"
        priority="4"
        summary="Looks for text sizes that are too small"
        explanation="Avoid using sizes smaller than 12sp."
        errorLine1="                        android:textSize=&quot;11sp&quot; />"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"
            line="303"
            column="25"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="        &lt;ImageView"
        errorLine2="        ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\app_download_notification.xml"
            line="17"
            column="9"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="                &lt;ImageView"
        errorLine2="                ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\dcloud_dialog.xml"
            line="32"
            column="17"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="        &lt;ImageView"
        errorLine2="        ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\dcloud_loadingview.xml"
            line="25"
            column="9"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="    &lt;ImageView"
        errorLine2="    ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\dcloud_view_splash.xml"
            line="15"
            column="5"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="        &lt;ImageView"
        errorLine2="        ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\image_pick_gallery_item.xml"
            line="14"
            column="9"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="                &lt;ImageView"
        errorLine2="                ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="64"
            column="17"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="                &lt;ImageView"
        errorLine2="                ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="70"
            column="17"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="                &lt;ImageView"
        errorLine2="                ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="157"
            column="17"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="            &lt;ImageView"
        errorLine2="            ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="292"
            column="13"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="                    &lt;ImageView"
        errorLine2="                    ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="333"
            column="21"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="                    &lt;ImageView"
        errorLine2="                    ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="396"
            column="21"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="                    &lt;ImageView"
        errorLine2="                    ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="459"
            column="21"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="                    &lt;ImageView"
        errorLine2="                    ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="522"
            column="21"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="        &lt;ImageView"
        errorLine2="        ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\increment_popup_dialog.xml"
            line="578"
            column="9"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="    &lt;ImageView"
        errorLine2="    ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\loadingview.xml"
            line="17"
            column="5"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="    &lt;ImageView android:id=&quot;@+id/notification_background&quot; "
        errorLine2="    ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification.xml"
            line="8"
            column="5"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="         &lt;ImageView"
        errorLine2="         ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification.xml"
            line="25"
            column="10"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="    &lt;ImageView"
        errorLine2="    ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"
            line="7"
            column="5"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="            &lt;ImageView"
        errorLine2="            ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"
            line="27"
            column="13"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="                    &lt;ImageView"
        errorLine2="                    ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"
            line="110"
            column="21"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="                 &lt;ImageView android:id=&quot;@+id/status_img&quot; "
        errorLine2="                 ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"
            line="141"
            column="18"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="                    &lt;ImageView"
        errorLine2="                    ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\notification_inc.xml"
            line="291"
            column="21"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="            &lt;ImageView"
        errorLine2="            ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\streamapp_list_item.xml"
            line="22"
            column="13"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="            &lt;ImageView"
        errorLine2="            ^"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\streamapp_list_item.xml"
            line="67"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Title&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Title&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\activity_main_market.xml"
            line="21"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;back&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;back&quot; "
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\activity_main_market.xml"
            line="28"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;tab0&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;tab0&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\activity_main_market.xml"
            line="52"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;tab1&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;tab1&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\activity_main_market.xml"
            line="68"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;tab2&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;tab2&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\activity_main_market.xml"
            line="85"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;tab3&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;tab3&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\activity_main_market.xml"
            line="102"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Power by DCloud&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;Power by DCloud&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\dcloud_view_splash.xml"
            line="31"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;正在缓冲流应用&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;正在缓冲流应用&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\dcloud_view_splash.xml"
            line="62"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;省流量&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;省流量&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\dcloud_view_splash.xml"
            line="77"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;省空间&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;省空间&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\dcloud_view_splash.xml"
            line="102"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;方便更新&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;方便更新&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\dcloud_view_splash.xml"
            line="114"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;边用边下&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;边用边下&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\dcloud_view_splash.xml"
            line="126"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;完成&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;完成&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\image_pick_gallery.xml"
            line="27"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;start_manage&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;start_manage&quot;/>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\main_test_activity.xml"
            line="11"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;set_priority&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;set_priority&quot;/>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\main_test_activity.xml"
            line="17"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;query_page&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;query_page&quot;/>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\main_test_activity.xml"
            line="23"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;delete_files&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;delete_files&quot;/>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\main_test_activity.xml"
            line="29"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;log:&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="         android:text=&quot;log:&quot;"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\main_test_activity.xml"
            line="36"
            column="10"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;This is a fragment&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="    android:text=&quot;This is a fragment&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="E:\testSpace\HBuilder-Hello\res\layout\market_fragment_base.xml"
            line="6"
            column="5"/>
    </issue>

</issues>
